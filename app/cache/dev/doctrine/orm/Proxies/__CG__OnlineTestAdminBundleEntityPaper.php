<?php

namespace Proxies\__CG__\OnlineTest\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Paper extends \OnlineTest\AdminBundle\Entity\Paper implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'id', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'paperName', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'starttime', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'endtime', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'status', 'exam', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'questions', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'examRecords', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'duration', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'parts', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'usable');
        }

        return array('__isInitialized__', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'id', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'paperName', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'starttime', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'endtime', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'status', 'exam', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'questions', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'examRecords', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'duration', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'parts', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Paper' . "\0" . 'usable');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Paper $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaperName($paperName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaperName', array($paperName));

        return parent::setPaperName($paperName);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaperName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaperName', array());

        return parent::getPaperName();
    }

    /**
     * {@inheritDoc}
     */
    public function setStarttime($starttime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStarttime', array($starttime));

        return parent::setStarttime($starttime);
    }

    /**
     * {@inheritDoc}
     */
    public function getStarttime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStarttime', array());

        return parent::getStarttime();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndtime($endtime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndtime', array($endtime));

        return parent::setEndtime($endtime);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndtime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndtime', array());

        return parent::getEndtime();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setExam(\OnlineTest\AdminBundle\Entity\Exam $exam = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExam', array($exam));

        return parent::setExam($exam);
    }

    /**
     * {@inheritDoc}
     */
    public function getExam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExam', array());

        return parent::getExam();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuestions($questions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuestions', array($questions));

        return parent::setQuestions($questions);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuestions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuestions', array());

        return parent::getQuestions();
    }

    /**
     * {@inheritDoc}
     */
    public function addExamRecord(\OnlineTest\MainBundle\Entity\ExamRecord $examRecords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExamRecord', array($examRecords));

        return parent::addExamRecord($examRecords);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExamRecord(\OnlineTest\MainBundle\Entity\ExamRecord $examRecords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExamRecord', array($examRecords));

        return parent::removeExamRecord($examRecords);
    }

    /**
     * {@inheritDoc}
     */
    public function getExamRecords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExamRecords', array());

        return parent::getExamRecords();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuration($duration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuration', array($duration));

        return parent::setDuration($duration);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuration', array());

        return parent::getDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setParts($parts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParts', array($parts));

        return parent::setParts($parts);
    }

    /**
     * {@inheritDoc}
     */
    public function getParts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParts', array());

        return parent::getParts();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsable($usable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsable', array($usable));

        return parent::setUsable($usable);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsable', array());

        return parent::getUsable();
    }

}
