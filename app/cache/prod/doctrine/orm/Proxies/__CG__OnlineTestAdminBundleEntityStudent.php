<?php

namespace Proxies\__CG__\OnlineTest\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Student extends \OnlineTest\AdminBundle\Entity\Student implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'id', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'username', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'name', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'password', 'salt', 'roles', 'examName', 'exam', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'status', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'student_name', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'examRecords');
        }

        return array('__isInitialized__', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'id', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'username', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'name', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'password', 'salt', 'roles', 'examName', 'exam', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'status', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'student_name', '' . "\0" . 'OnlineTest\\AdminBundle\\Entity\\Student' . "\0" . 'examRecords');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Student $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', array());

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', array());

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', array());

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', array($serialized));

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', array($salt));

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function setExam(\OnlineTest\AdminBundle\Entity\Exam $exam = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExam', array($exam));

        return parent::setExam($exam);
    }

    /**
     * {@inheritDoc}
     */
    public function getExam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExam', array());

        return parent::getExam();
    }

    /**
     * {@inheritDoc}
     */
    public function setExamName($examName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExamName', array($examName));

        return parent::setExamName($examName);
    }

    /**
     * {@inheritDoc}
     */
    public function getExamName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExamName', array());

        return parent::getExamName();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStudentName($studentName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStudentName', array($studentName));

        return parent::setStudentName($studentName);
    }

    /**
     * {@inheritDoc}
     */
    public function getStudentName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStudentName', array());

        return parent::getStudentName();
    }

    /**
     * {@inheritDoc}
     */
    public function addExamRecord(\OnlineTest\MainBundle\Entity\ExamRecord $examRecords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExamRecord', array($examRecords));

        return parent::addExamRecord($examRecords);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExamRecord(\OnlineTest\MainBundle\Entity\ExamRecord $examRecords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExamRecord', array($examRecords));

        return parent::removeExamRecord($examRecords);
    }

    /**
     * {@inheritDoc}
     */
    public function getExamRecords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExamRecords', array());

        return parent::getExamRecords();
    }

}
